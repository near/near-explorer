// @generated
// This file is automatically generated by Kanel. Do not modify manually.

import type {
  default as AccessKeys,
  AccessKeysInitializer,
  AccessKeysMutator,
} from "./access-keys";
import type {
  default as Accounts,
  AccountsInitializer,
  AccountsMutator,
} from "./accounts";
import type {
  default as ActionReceiptActions,
  ActionReceiptActionsInitializer,
  ActionReceiptActionsMutator,
} from "./action-receipt-actions";
import type {
  default as ActionReceiptInputData,
  ActionReceiptInputDataInitializer,
  ActionReceiptInputDataMutator,
} from "./action-receipt-input-data";
import type {
  default as ActionReceiptOutputData,
  ActionReceiptOutputDataInitializer,
  ActionReceiptOutputDataMutator,
} from "./action-receipt-output-data";
import type {
  default as ActionReceipts,
  ActionReceiptsInitializer,
  ActionReceiptsMutator,
} from "./action-receipts";
import type {
  default as AggregatedCirculatingSupply,
  AggregatedCirculatingSupplyInitializer,
  AggregatedCirculatingSupplyMutator,
} from "./aggregated-circulating-supply";
import type {
  default as AssetsNonFungibleTokenEvents,
  AssetsNonFungibleTokenEventsInitializer,
  AssetsNonFungibleTokenEventsMutator,
} from "./assets-non-fungible-token-events";
import type {
  default as Blocks,
  BlocksInitializer,
  BlocksMutator,
} from "./blocks";
import type {
  default as Chunks,
  ChunksInitializer,
  ChunksMutator,
} from "./chunks";
import type {
  default as DataReceipts,
  DataReceiptsInitializer,
  DataReceiptsMutator,
} from "./data-receipts";
import type {
  default as ExecutionOutcomeReceipts,
  ExecutionOutcomeReceiptsInitializer,
  ExecutionOutcomeReceiptsMutator,
} from "./execution-outcome-receipts";
import type {
  default as ExecutionOutcomes,
  ExecutionOutcomesInitializer,
  ExecutionOutcomesMutator,
} from "./execution-outcomes";
import type {
  default as Receipts,
  ReceiptsInitializer,
  ReceiptsMutator,
} from "./receipts";
import type {
  default as TransactionActions,
  TransactionActionsInitializer,
  TransactionActionsMutator,
} from "./transaction-actions";
import type {
  default as Transactions,
  TransactionsInitializer,
  TransactionsMutator,
} from "./transactions";

export type { default as NftEventKind } from "./nft-event-kind";
export type { default as FtEventKind } from "./ft-event-kind";
export type { default as ExecutionOutcomeStatus } from "./execution-outcome-status";
export type { default as AccessKeyPermissionKind } from "./access-key-permission-kind";
export type { default as ReceiptKind } from "./receipt-kind";
export type { default as ActionKind } from "./action-kind";
export type { default as StateChangeReasonKind } from "./state-change-reason-kind";
export type {
  default as AccessKeys,
  AccessKeysInitializer,
  AccessKeysMutator,
  AccessKeysPublicKey,
  AccessKeysAccountId,
} from "./access-keys";
export type {
  default as Accounts,
  AccountsInitializer,
  AccountsMutator,
  AccountsId,
} from "./accounts";
export type {
  default as ActionReceiptActions,
  ActionReceiptActionsInitializer,
  ActionReceiptActionsMutator,
  ActionReceiptActionsIndexInActionReceipt,
} from "./action-receipt-actions";
export type {
  default as ActionReceiptInputData,
  ActionReceiptInputDataInitializer,
  ActionReceiptInputDataMutator,
  ActionReceiptInputDataInputDataId,
} from "./action-receipt-input-data";
export type {
  default as ActionReceiptOutputData,
  ActionReceiptOutputDataInitializer,
  ActionReceiptOutputDataMutator,
  ActionReceiptOutputDataOutputDataId,
} from "./action-receipt-output-data";
export type {
  default as ActionReceipts,
  ActionReceiptsInitializer,
  ActionReceiptsMutator,
} from "./action-receipts";
export type {
  default as AggregatedCirculatingSupply,
  AggregatedCirculatingSupplyInitializer,
  AggregatedCirculatingSupplyMutator,
} from "./aggregated-circulating-supply";
export type {
  default as AssetsNonFungibleTokenEvents,
  AssetsNonFungibleTokenEventsInitializer,
  AssetsNonFungibleTokenEventsMutator,
  AssetsNonFungibleTokenEventsEmittedIndexOfEventEntryInShard,
} from "./assets-non-fungible-token-events";
export type {
  default as Blocks,
  BlocksInitializer,
  BlocksMutator,
  BlocksBlockHash,
} from "./blocks";
export type {
  default as Chunks,
  ChunksInitializer,
  ChunksMutator,
  ChunksChunkHash,
} from "./chunks";
export type {
  default as DataReceipts,
  DataReceiptsInitializer,
  DataReceiptsMutator,
  DataReceiptsDataId,
} from "./data-receipts";
export type {
  default as ExecutionOutcomeReceipts,
  ExecutionOutcomeReceiptsInitializer,
  ExecutionOutcomeReceiptsMutator,
  ExecutionOutcomeReceiptsIndexInExecutionOutcome,
  ExecutionOutcomeReceiptsProducedReceiptId,
} from "./execution-outcome-receipts";
export type {
  default as ExecutionOutcomes,
  ExecutionOutcomesInitializer,
  ExecutionOutcomesMutator,
} from "./execution-outcomes";
export type {
  default as Receipts,
  ReceiptsInitializer,
  ReceiptsMutator,
  ReceiptsReceiptId,
} from "./receipts";
export type {
  default as TransactionActions,
  TransactionActionsInitializer,
  TransactionActionsMutator,
  TransactionActionsIndexInTransaction,
} from "./transaction-actions";
export type {
  default as Transactions,
  TransactionsInitializer,
  TransactionsMutator,
  TransactionsTransactionHash,
} from "./transactions";
export type { default as AggregatedLockups } from "./aggregated-lockups";

export interface SelectorModelTypeMap {
  access_keys: AccessKeys;

  accounts: Accounts;

  action_receipt_actions: ActionReceiptActions;

  action_receipt_input_data: ActionReceiptInputData;

  action_receipt_output_data: ActionReceiptOutputData;

  action_receipts: ActionReceipts;

  aggregated__circulating_supply: AggregatedCirculatingSupply;

  assets__non_fungible_token_events: AssetsNonFungibleTokenEvents;

  blocks: Blocks;

  chunks: Chunks;

  data_receipts: DataReceipts;

  execution_outcome_receipts: ExecutionOutcomeReceipts;

  execution_outcomes: ExecutionOutcomes;

  receipts: Receipts;

  transaction_actions: TransactionActions;

  transactions: Transactions;
}

export interface InitializerModelTypeMap {
  access_keys: AccessKeysInitializer;

  accounts: AccountsInitializer;

  action_receipt_actions: ActionReceiptActionsInitializer;

  action_receipt_input_data: ActionReceiptInputDataInitializer;

  action_receipt_output_data: ActionReceiptOutputDataInitializer;

  action_receipts: ActionReceiptsInitializer;

  aggregated__circulating_supply: AggregatedCirculatingSupplyInitializer;

  assets__non_fungible_token_events: AssetsNonFungibleTokenEventsInitializer;

  blocks: BlocksInitializer;

  chunks: ChunksInitializer;

  data_receipts: DataReceiptsInitializer;

  execution_outcome_receipts: ExecutionOutcomeReceiptsInitializer;

  execution_outcomes: ExecutionOutcomesInitializer;

  receipts: ReceiptsInitializer;

  transaction_actions: TransactionActionsInitializer;

  transactions: TransactionsInitializer;
}

export interface MutatorModelTypeMap {
  access_keys: AccessKeysMutator;

  accounts: AccountsMutator;

  action_receipt_actions: ActionReceiptActionsMutator;

  action_receipt_input_data: ActionReceiptInputDataMutator;

  action_receipt_output_data: ActionReceiptOutputDataMutator;

  action_receipts: ActionReceiptsMutator;

  aggregated__circulating_supply: AggregatedCirculatingSupplyMutator;

  assets__non_fungible_token_events: AssetsNonFungibleTokenEventsMutator;

  blocks: BlocksMutator;

  chunks: ChunksMutator;

  data_receipts: DataReceiptsMutator;

  execution_outcome_receipts: ExecutionOutcomeReceiptsMutator;

  execution_outcomes: ExecutionOutcomesMutator;

  receipts: ReceiptsMutator;

  transaction_actions: TransactionActionsMutator;

  transactions: TransactionsMutator;
}
